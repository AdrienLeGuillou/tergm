#ifndef DYNNM_H
#define DYNNM_H

#include "MCMCDyn.h"
#include "MHproposals.h"
#include "DynSPSA.h"

typedef struct {
  Network *nwp;
  // Formation terms and proposals.
  Model *F_m; MHproposal *F_MH; double *F_theta; double *F_stats_acc;
  // Dissolution terms and proposals.
  Model *D_m; MHproposal *D_MH; double *D_theta;
  // Degree bounds.
  double *F_stats; double *D_stats;
  unsigned int nmax;
  Vertex *difftime; Vertex *diffhead; Vertex *difftail;
  // MCMC settings.
  unsigned int dyninterval;
  unsigned int burnin;
  unsigned int S;
} MCMCSampleDyn_optimfn_args;


void MCMCDynNM_wrapper(// Observed network.
		    int *heads, int *tails, int *n_edges,
		    int *n_nodes, int *dflag, int *bipartite, 
		    // Formation terms and proposals.
		    int *F_nterms, char **F_funnames, char **F_sonames, 
		    char **F_MHproposaltype, char **F_MHproposalpackage,
		    double *F_inputs, double *F_theta0, 
		    double *init_dev,
		    // Nelder-Mead settings.
		    int *fail,
		    double *abstol,
		    double *intol,
		    double *alpha,
		    double *beta,
		    double *gamma,
		    int *trace,
		    int *fncount,
		    int *maxit,
		    // Dissolution terms and proposals.
		    int *D_nterms, char **D_funnames, char **D_sonames, 
		    char **D_MHproposaltype, char **D_MHproposalpackage,
		    double *D_inputs, double *D_theta0,
		    // Degree bounds.
		    int *attribs, int *maxout, int *maxin, int *minout,
		    int *minin, int *condAllDegExact, int *attriblength,
		    // MCMC settings.
		    int *burnin, int *interval, int *dyninterval,
		    // Space for output.
		    int *maxedges,
		    // Verbosity.
		    int *fVerbose);

double MCMCSampleDyn_optimfn(int n, double *par, void *ex);
#endif
