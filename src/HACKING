This document is provided for the posterity in the hope that it save
said posterity time.

1) The compile-time warnings about pointer signedness:

These should, generally, be OK to ignore, unless they don't come in
pairs. The reason they occur is that R only allows passing (signed)
int types to its C routines, while Vertex indices taken by network
initializtion functions take Vertex types, which are unsigned
int. This shouldn't be a problem, since (nonnegative) unsigned ints
less than or equal to 2^31-1 are represented exactly the same as
nonnegative unsigned integers in that range.

One of these days, proper casts will be added (though they can hide
programming errors such as incompatible pointer types).

2) The ways of nwp[1]:

Routines that deal with separate formation and dissolution processes
operate with two networks: nwp[0] and nwp[1]. nwp[0] is the current
network within the current phase. An M-H step will modify it. nwp[1]
is the set of dyads that differ between nwp[0] and the network at the
beginning of the current phase.

Thus, a formation proposal may touch a dyad if it either doesn't have
an edge in nwp[0] or if it has an edge in nwp[1] (and was thus toggled
on during the current phase); while a dissolution proposal may touch a
dyad if it either has an edge in nwp[0] or if it has an edge in
nwp[1].


3) Proposal failure codes:

There are proposal failure codes. As of this writing, they have not
yet been fully applied everywhere where they should be applied.

When an MH_* function finds that it cannot come up with a valid
proposal for some reason, it should signal a failure to propose by
setting MHp->toggletail[0] to 0 and setting MHp->togglehead[0] to one
of the codes listed below, describing the reason for the failure and
the recommended behavior for the caller (which the caller is free to
ignore at its own peril).

(0) The porposal has failed in a nasty way, and sampling should be
stopped.

(1) The proposal requested cannot be made on this network (and we can
prove it). In the case of cross-sectional sampling, the sampling
should be stopped. In the case of dynamic sampling, the sampler should
skip the rest of the current MCMC run and continue on to its opposite.

(2) The proposal failed after maximum allowed attempts have been
made. At the discretion of the caller, it may make sense to try again.